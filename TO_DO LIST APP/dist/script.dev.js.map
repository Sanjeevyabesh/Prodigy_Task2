{"version":3,"sources":["script.js"],"names":["tasks","promptUser","action","prompt","addTask","filterTasks","alert","taskInput","document","getElementById","dateInput","timeInput","value","trim","task","id","Date","now","text","date","time","completed","push","renderTasks","filter","taskList","innerHTML","filteredTasks","forEach","li","createElement","className","appendChild","editTask","find","newText","newDate","newTime","map","toggleComplete","deleteTask"],"mappings":"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","sourcesContent":["let tasks = [];\r\n\r\nfunction promptUser() {\r\n    const action = prompt('What would you like to do? (new/pending/completed)');\r\n    if (action === 'new') {\r\n        addTask();\r\n    } else if (action === 'pending') {\r\n        filterTasks('pending');\r\n    } else if (action === 'completed') {\r\n        filterTasks('completed');\r\n    } else {\r\n        alert('Invalid option. Please enter \"new\", \"pending\", or \"completed\".');\r\n    }\r\n}\r\n\r\nfunction addTask() {\r\n    const taskInput = document.getElementById('taskInput');\r\n    const dateInput = document.getElementById('dateInput');\r\n    const timeInput = document.getElementById('timeInput');\r\n\r\n    if (taskInput.value.trim() !== '' && dateInput.value && timeInput.value) {\r\n        const task = {\r\n            id: Date.now(),\r\n            text: taskInput.value,\r\n            date: dateInput.value,\r\n            time: timeInput.value,\r\n            completed: false\r\n        };\r\n        tasks.push(task);\r\n        taskInput.value = '';\r\n        dateInput.value = '';\r\n        timeInput.value = '';\r\n        renderTasks();\r\n    }\r\n}\r\n\r\nfunction renderTasks(filter = 'all') {\r\n    const taskList = document.getElementById('taskList');\r\n    taskList.innerHTML = '';\r\n\r\n    const filteredTasks = tasks.filter(task => {\r\n        if (filter === 'all') return true;\r\n        if (filter === 'pending') return !task.completed;\r\n        if (filter === 'completed') return task.completed;\r\n    });\r\n\r\n    filteredTasks.forEach(task => {\r\n        const li = document.createElement('li');\r\n        li.className = task.completed ? 'completed' : '';\r\n        li.innerHTML = `\r\n            <span>${task.text}</span>\r\n            <span>${task.date} ${task.time}</span>\r\n            <div>\r\n                <button class=\"edit\" onclick=\"editTask(${task.id})\">Edit</button>\r\n                <button class=\"complete\" onclick=\"toggleComplete(${task.id})\">${task.completed ? 'Undo' : 'Complete'}</button>\r\n                <button onclick=\"deleteTask(${task.id})\">Delete</button>\r\n            </div>\r\n        `;\r\n        taskList.appendChild(li);\r\n    });\r\n}\r\n\r\nfunction editTask(id) {\r\n    const task = tasks.find(task => task.id === id);\r\n    const newText = prompt('Edit your task:', task.text);\r\n    const newDate = prompt('Edit the date:', task.date);\r\n    const newTime = prompt('Edit the time:', task.time);\r\n\r\n    if (newText && newDate && newTime) {\r\n        tasks = tasks.map(task => task.id === id ? { ...task, text: newText, date: newDate, time: newTime } : task);\r\n        renderTasks();\r\n    }\r\n}\r\n\r\nfunction toggleComplete(id) {\r\n    tasks = tasks.map(task => task.id === id ? { ...task, completed: !task.completed } : task);\r\n    renderTasks();\r\n}\r\n\r\nfunction deleteTask(id) {\r\n    tasks = tasks.filter(task => task.id !== id);\r\n    renderTasks();\r\n}\r\n\r\nfunction filterTasks(filter) {\r\n    renderTasks(filter);\r\n}\r\n\r\n// Call promptUser to start the interaction\r\npromptUser();\r\n"],"file":"script.dev.js"}